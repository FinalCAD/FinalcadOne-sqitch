name: Release

on:
  push:
    tags:
      - '*'

env:
  APP_DOCKER_IMAGE: sqitch-config

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ecr:
    permissions:
      id-token: write
      contents: write
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set release env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          role-to-assume: ${{ secrets.DEPLOY_ROLE }}
          role-session-name: OIDCSession
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - uses: FinalCAD/AppEcrAction@v1.1
        name: ecr
        with:
          aws-role: ${{ secrets.DEPLOY_ROLE }}
          environment: production
          registry: ${{ env.APP_DOCKER_IMAGE }}
          pulling-accounts: "760240387743,915341693161"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: '.'
          push: true
          tags: '${{ steps.login-ecr.outputs.registry }}/${{ env.APP_DOCKER_IMAGE }}:latest, ${{ steps.login-ecr.outputs.registry }}/${{ env.APP_DOCKER_IMAGE }}:${{ env.RELEASE_VERSION }}'
